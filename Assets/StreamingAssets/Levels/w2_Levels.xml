<LevelsCollection>
<Levels>
	<!--
     
	-->

	<!-- ================================ MIRRORS ================================ -->\
	<Level name="introMirrorImmovable1" desc="Intro to Mirrors (immovable)" parMoves="13" layout="W..\,   ....,   q...,   $..@,   ,   ...m,   ....,   ....,   ....," />
	<Level name="introMirrorImmovable2" desc="Intro to Mirrors (immovable) #2" parMoves="13" layout="W.@.\,   $....,   ....e,   .....,   \.../,   ,   ....m,   .....,   .....,   .....,   m...m," />
	<!-- ADD: One more immovable mirrors? -->

	<Level name="introMirrorMovable" desc="Intro immovable BeamSource (could be improved, make immovable property a lot more obvious)" parMoves="14" layout="
		....E,
		.....,
		w../.,
		.....,
		@...$,
		,
		.....,
		.....,
		m....,
		.....,
		.....,
	" />
	<Level name="movableMirrorZigZag1" desc="Great! Forward zig-zag 2 Mirrors." parMoves="21" layout="..R,   w..,   ...,   ..$,   @//,   ,   ...,   m..,   ...,   ...,   ...," />
	<Level name="movableMirrorZigZag2" desc="Great! Forward zig-zag 2 Mirrors subtle inversion (similar solution, though)." parMoves="21" layout="w..,   ..R,   ...,   ..$,   @\\,   ,   m..,   ...,   ...,   ...,   ...," />
	<Level name="mirrorPushBeamSource" desc="Great! Use Mirror to push BeamSource, THEN use Wall to block BeamSource." parMoves="48" layout="
		S...\,
		..@..,
		._..a,
		$...O,
	" />
	<Level name="oneMirrorTwoBeams" desc="One Mirror to redirect TWO beams!" parMoves="40" layout="
		@...q,
		.....,
		.W.R.,
		.....,
		e.../,
        ,
        ....$,
        .....,
        .....,
        .....,
        .....,
	" />
	<Level name="cratePushMirror" desc="Great! Use Crate to push Mirror into place." parMoves="36" layout="
		W...o,
		.@..~,
		\...q,
		,
		.....,
		.....,
		$...m,
	" />
	<Level name="temporaryBlocker" desc="Great! Use Crate to BLOCK BeamSource temporarily." parMoves="31" layout="
		W..o,
		.@..,
		....,
		\..q,
		,
		....,
		....,
		....,
		$..m,
	" />



	<!-- ================================ MOVABLE BEAMGOALS ================================ -->
	<Level name="beamGoalPushBeamSource" desc="Use BeamGoal to push its BeamSource :D" parMoves="28" layout="@...$,   ~e...,   ~....,   \...R,   ,   .....,   .M...,   .....,   m...M," />
	<Level name="beamGoalPushMirror" desc="Very easy (but nice). Use BeamGoal to push Mirror into place. Better with moves par." parMoves="18" layout="D..\,   ..@.,   ....,   ...f,   ,   M..$,   ....,   ....,   ...m," />
	<Level name="twoCratePassageBlock" desc="Fairly easy and okay. Use 2 Crates to block 2 BeamSources to access Mirror. Really tough with par." parMoves="51" layout="
		.@.e../,
		.......,
		W.....R,
		.......,
		oo.q..$,
		,
		...m...,
		.......,
		.......,
		.......,
		...m...,
	" />
	<Level name="oneSpaceSplit" desc="BEAUTIFUL one-space for two beams split. Combines several previous levels together, though. Could be totally its own!" parMoves="90" layout="
		@.../\/,
		...f...,
		..S.F..,
		...s...,
		......$,
	" />



	<Level name="fourMirrorMadness" desc="4-Mirror madness!" parMoves="1" layout="
		E...$,
		..@..,
		.....,
		/\\/q,
		,
		.....,
		.....,
		.....,
		....m,
	" />




<Level name="mirrorPushMirror" desc="Use Mirror to push Mirror into place. Partially redundant with the previous 2-Mirror zig-zags." parMoves="37" isBonus="true" layout="
E~~~~,
..@..,
.....,
\.\.q,
,
.....,
.....,
.....,
...$m,
" />
    <Level name="twoMirrorTemporaryRedirect" desc="Use Mirror facing the OTHER way to block a BeamSource" parMoves="27" isBonus="true" layout="
        ...\,
        ....,
        ....,
        @...,
        $/Qq,
        ,
        ....,
        ....,
        ....,
        ....,
        ...m,
        " />
        
        <Level name="beamGoalsBehindSourceUseThreeMirrors" isBonus="true" desc="" par="31" layout="
        E..@$,
        .w...,
        .....,
        .\/\.,
        " />
        
        
	<Level name="oneMirrorTwoBeamSourcePush" desc="Good BONUS level. Use ONE Mirror to push BeamSources, AND to redirect TWO Beams! Note: Didn't try my best to find lowest par." isBonus="true" parMoves="76" layout="
		@.O.a,
		.....,
		S...F,
		.....,
		d.O./,
        ,
        ....$,
        .....,
        .....,
        .....,
        .....,
        " />
        
        
        <Level name="isThisPossible? 89253789" desc="I know it's possible (and not too hard) with the exit on the bottom left. I feel like I get so close here." parMoves="1" layout="
        ..@.dD...$,
        \/o.......,
        W........R,
        ..........,
        ....qq....,
        ,
        ....mm....,
        ..........,
        ..........,
        ..........,
        ....mm....,
        " />




	<Level name="EmptyLevel" desc="" parMoves="1" layout="
		.....,
		.....,
		.....,
		.....,
		.....,
	" />



	<Level name="TEST WIP 98235" desc="" parMoves="1" layout="
		.@.eE..$,
		........,
		/\......,
		W......R,
		........,
		........,
		...qq...,
		,
		...mm...,
		........,
		........,
		........,
		........,
		........,
		...mm...,
	" />


	<!-- Levels to add:
		* Put one mirror in lots of immovable mirrors to complete the path

	-->


	<!--
		// ==== Rejected levels ====
     

		new string[]{ // Pretty cross-thatch design thingy, but too easy to solve accidentally.
		..@..e...$,
		//.......R,
		W.........,
		....q.....,
		,
		.....m....,
		..........,
		..........,
		....m.....,


		// new string[]{ // Intro immovable BeamSource (could be improved, make immovable property a lot more obvious)
		//   ....E,
		//   ..../,
		//   ..w..,
		//   .....,
		//   @....,
		//   ,
		//   .....,
		//   .....,
		//   ..m..,
		//   .....,
		//   .....,
		//
		// new string[]{ // Two movable Mirrors (kinda redundant with the two-mirror zig-zags)
		//   w...,
		//   W...,
		//   ....,
		//   @.\/,
		//   ,
		//   m...,
		//   ....,
		//   ....,
		//   ....,
		//

		// new string[]{ // Easy. Use a Mirror to redirect TWO Beams!
		//   @...d,   .....,   S...F,   .....,   a...\, // Cut: Too easy.
		// new string[]{ // Use ONE Mirror to push BeamSources, AND to redirect TWO Beams! WIP
		//   ....."
		//   .~~
		//   ~~..~,
		//   @...a,
		//   S...F,
		//   d.../,
		//   ~~..~,
		//
		// new string[]{ // Use Mirror to push BeamSource (might be redundant with next one) Tentatively cut: Partially redundant with next level.
		//   @...,
		//   ..e.,
		//   ....,
		//   W./.,
		//   ,
		//   ..O.,
		//   ..M.,
		//   ....,
		//   m...,
		//
//		new string[]{ // Great! Use Mirror to push BeamSource, THEN use Obstacle to block BeamSource. 
//		S...\,
//		.....,
//		..@..,
//		.#..a,
//		$...O,
//		},
		// new string[]{ // Use Obstacle to block BeamSource. Not bad, but it's mostly about tight-quarters maneuvering, though.
		//   W.@O,
		//   ....,
		//   ..#.,
		//   \..q,
		//
		// new string[]{ // Use Obstacle to block BeamSource.
		//   W.@.O,
		//   .....,
		//   .....,
		//   ..#..,
		//   \...q,
		//
		// new string[]{ // Easy Use Obstacle to block BeamSource.
		//   W.\O,
		//   ....,
		//   .#..,
		//   ....,
		//   @..q,
		//
		// new string[]{ // Slightly more challenging variant on beamGoalPushMirror, but less pretty. Good for a "harder version of" level.
		//   D..\,
		//   ..@.,
		//   ....,
		//   ...f,
		//   ,
		//   M...,
		//   ....,
		//   ....,
		//   ...m,
		//   ,
		//   O...,
		//   ....,
		//   ....,
		//   ....,
		//
		// new string[]{ // Crate to push Mirror into two parallel Beams. Kind of redundant with other crate-push-mirror lvls.
		//   ..@.e....,   ./o......,   W.......R,   .........,   ....q....,   ,   ....m....,   .........,   .........,   .........,   ....m....,
		// new string[]{ // IMPOSSIBLE idea
		//   ..@.c....,
		//   ....\....,
		//   X.......V,
		//   ....\....,
		//   ....z....,
		//   ,
		//   ....m....,
		//   .........,
		//   ........m,
		//   .........,
		//   ....m....,
		//

		// new string[]{ // Lots of mirrors IDEA
		//   @....Ee,
		//   .......,
		//   ////...,
		//   \\\\...,
		//   .......,
		//   .......,
		//   ,
		//   ......m,
		//   .......,
		//   ....OOO,
		//   ....OOO,
		//   .....OO,
		//   .......,
		//


		// new string[]{ // TEST 3 mirror madness!
		//   E....,
		//   ..@..,
		//   .../.,
		//   ../\q,
		//   ~~\/~,
		//   ,
		//   .....,
		//   .....,
		//   .....,
		//   ....m,
		//   ..mm.,
		//

//		new string[]{ // Spiral idea TEST
//		.@....s,
//		.......,
//		.....\.,
//		./..\..,
//		../F...,
//		..\./..,
//		.\.../.,
//		,
//		.......,
//		.......,
//		.....m.,
//		.m..m..,
//		..m....,
//		..m.m..,
//		.m...m.,
//		},



		// new string[]{ // TEST idea
		//   ./....\,
		//   a......,
		//   /..\...,
		//   ..S/F..,
		//   ..@\../,
		//   ......d,
		//   \..../.,
		//   ,
		//   .m....m,
		//   .......,
		//   m..m...,
		//   ...m...,
		//   ...m..m,
		//   .......,
		//   m....m.,
		//		},

	-->



</Levels>
</LevelsCollection>
